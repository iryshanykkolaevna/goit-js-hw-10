{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate;\n\nconst startBtn = document.querySelector('button[data-start]');\nstartBtn.disabled = true;\n\nconst dataDays = document.querySelector('span[data-days]');\nconst dataHours = document.querySelector('span[data-hours]');\nconst dataMinutes = document.querySelector('span[data-minutes]');\nconst dataSeconds = document.querySelector('span[data-seconds]');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0].getTime() > Date.now()) {\n      userSelectedDate = selectedDates[0].getTime();\n      startBtn.disabled = false;\n    } else {\n      iziToast.show({\n        position: 'topCenter',\n        iconColor: '#FAFAFB',\n        icon: 'izi-close-icon',\n        messageColor: '#FAFAFB',\n        messageSize: '16px',\n        backgroundColor: '#FC5A5A',\n        close: false,\n        closeOnClick: true,\n        message: 'Please choose a date in the future!',\n      });\n      startBtn.disabled = true;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nstartBtn.addEventListener('click', event => {\n  const timerID = setInterval(() => {\n    startBtn.disabled = true;\n    const timeDiff = userSelectedDate - Date.now();\n    const timeObj = convertMs(timeDiff);\n    if (timeDiff <= 0) {\n      clearInterval(timerID);\n    } else {\n      dataDays.textContent = addLeadingZero(timeObj.days);\n      dataHours.textContent = addLeadingZero(timeObj.hours);\n      dataMinutes.textContent = addLeadingZero(timeObj.minutes);\n      dataSeconds.textContent = addLeadingZero(timeObj.seconds);\n    }\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  value = String(value);\n  return value.length < 2 ? value.padStart(2, '0') : value;\n}\n"],"names":["userSelectedDate","startBtn","dataDays","dataHours","dataMinutes","dataSeconds","options","selectedDates","iziToast","flatpickr","event","timerID","timeDiff","timeObj","convertMs","addLeadingZero","ms","days","hours","minutes","seconds","value"],"mappings":"+IAKA,IAAIA,EAEJ,MAAMC,EAAW,SAAS,cAAc,oBAAoB,EAC5DA,EAAS,SAAW,GAEpB,MAAMC,EAAW,SAAS,cAAc,iBAAiB,EACnDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,oBAAoB,EAEzDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,GAAG,QAAO,EAAK,KAAK,OACpCP,EAAmBO,EAAc,GAAG,QAAO,EAC3CN,EAAS,SAAW,KAEpBO,EAAS,KAAK,CACZ,SAAU,YACV,UAAW,UACX,KAAM,iBACN,aAAc,UACd,YAAa,OACb,gBAAiB,UACjB,MAAO,GACP,aAAc,GACd,QAAS,qCACjB,CAAO,EACDP,EAAS,SAAW,GAEvB,CACH,EAEAQ,EAAU,mBAAoBH,CAAO,EAErCL,EAAS,iBAAiB,QAASS,GAAS,CAC1C,MAAMC,EAAU,YAAY,IAAM,CAChCV,EAAS,SAAW,GACpB,MAAMW,EAAWZ,EAAmB,KAAK,IAAG,EACtCa,EAAUC,EAAUF,CAAQ,EAC9BA,GAAY,EACd,cAAcD,CAAO,GAErBT,EAAS,YAAca,EAAeF,EAAQ,IAAI,EAClDV,EAAU,YAAcY,EAAeF,EAAQ,KAAK,EACpDT,EAAY,YAAcW,EAAeF,EAAQ,OAAO,EACxDR,EAAY,YAAcU,EAAeF,EAAQ,OAAO,EAE3D,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAUE,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASL,EAAeM,EAAO,CAC7B,OAAAA,EAAQ,OAAOA,CAAK,EACbA,EAAM,OAAS,EAAIA,EAAM,SAAS,EAAG,GAAG,EAAIA,CACrD"}